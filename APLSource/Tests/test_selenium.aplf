 {r}←test_selenium project_dir;using;prefixes;path;drvs;drv;exp;⎕USING;pwf
 r←''  ⍝ no checks here - error will be caught when executed throught DTest or in CITA
⍝ we test to stepwise add libraries to the project (avoiding the "Publish" step)
 0 NuGet.Add project_dir'Selenium.WebDriver'
 0 NuGet.Add project_dir'Selenium.WebDriver.ChromeDriver'
 ⍝ the next one is a bit tricky because we need to a version of the library that matches the version of the WebDriver that was loaded.
 ⍝ we didn't specify one when loading the WebDriver - so Selenium4 fetched the one that matches our browser!
 ⍝ Our .csproj will have a line like this:
 ⍝   <PackageReference Include="Selenium.WebDriver" Version="4.37.0" />
 ⍝                                                           ↑↑↑↑↑↑    and that is the info we need! regex below will extract it....
 0 NuGet.Add project_dir('Selenium.Support/',⊃('"Selenium.WebDriver" Version="(.*)"'⎕s'\1')1⊃⎕NGET{⎕←⍵,'/_',(2⊃⎕NPARTS ⍵),'.csproj'}project_dir)
 NuGet.Publish project_dir
 prefixes←'OpenQA' 'OpenQA.Selenium' 'OpenQA.Selenium.Chrome' 'OpenQA.Selenium.Support.UI'   ⍝ paths into libraries that we need in ⎕USING
 ⎕USING←prefixes,NuGet.Using project_dir
 path←(NuGet.BinFolder project_dir),'/chromedriver.exe'
 drvs←ChromeDriverService.CreateDefaultService⊂path
 drv←⎕NEW ChromeDriver drvs
 drv.Url←'https://dyalog.com'
 ⎕DL 5
 :If drv.Title≢exp←'Home - Dyalog'
     r←'did not get expected page title "',exp,'" but "',drv.Title,'"'
 :Else
     ⎕←'Successfully loaded ',drv.Title
 :EndIf

 pwf←⎕NEW PopupWindowFinder drv   ⍝ simple check if the fn from Support.UI is available (will error otherwise)

 drv.Quit
